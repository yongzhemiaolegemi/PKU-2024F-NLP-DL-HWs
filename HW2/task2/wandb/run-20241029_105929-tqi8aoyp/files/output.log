2024-10-29 10:59:31 - INFO - __main__ - Initializing training script
2024-10-29 10:59:31 - INFO - __main__ - Loading dataset...
2024-10-29 10:59:31 - INFO - __main__ - Loading model and tokenizer...
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at allenai/scibert_scivocab_uncased and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Map: 100%|██████████████████████████████████████████████████████████████████████████| 3452/3452 [00:00<00:00, 11889.84 examples/s]
Map: 100%|██████████████████████████████████████████████████████████████████████████| 1120/1120 [00:00<00:00, 11195.47 examples/s]
/root/HW2/task2/train.py:101: FutureWarning: `tokenizer` is deprecated and will be removed in version 5.0.0 for `Trainer.__init__`. Use `processing_class` instead.
  trainer = Trainer(
2024-10-29 10:59:38 - INFO - __main__ - Starting training...
  0%|                                                                                                     | 0/324 [00:00<?, ?it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn(
 33%|██████████████████████████████▎                                                            | 108/324 [00:24<00:39,  5.42it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.9538, 'grad_norm': 3.557978630065918, 'learning_rate': 4.845679012345679e-05, 'epoch': 0.09}
{'loss': 0.7868, 'grad_norm': 6.730588912963867, 'learning_rate': 4.691358024691358e-05, 'epoch': 0.19}
{'loss': 0.732, 'grad_norm': 10.425954818725586, 'learning_rate': 4.5370370370370374e-05, 'epoch': 0.28}
{'loss': 0.685, 'grad_norm': 7.159074306488037, 'learning_rate': 4.3827160493827164e-05, 'epoch': 0.37}
{'loss': 0.6153, 'grad_norm': 6.646308422088623, 'learning_rate': 4.2283950617283955e-05, 'epoch': 0.46}
{'loss': 0.6361, 'grad_norm': 7.8678717613220215, 'learning_rate': 4.074074074074074e-05, 'epoch': 0.56}
{'loss': 0.7368, 'grad_norm': 8.287676811218262, 'learning_rate': 3.9197530864197535e-05, 'epoch': 0.65}
{'loss': 0.6401, 'grad_norm': 7.833686828613281, 'learning_rate': 3.7654320987654326e-05, 'epoch': 0.74}
{'loss': 0.5567, 'grad_norm': 5.742645740509033, 'learning_rate': 3.611111111111111e-05, 'epoch': 0.83}
{'loss': 0.658, 'grad_norm': 6.966135025024414, 'learning_rate': 3.45679012345679e-05, 'epoch': 0.93}
  warnings.warn(                                                                                                                  
{'eval_loss': 0.5282959938049316, 'eval_accuracy': 0.8008928571428572, 'eval_micro_f1': 0.8008928571428572, 'eval_macro_f1': 0.686739187900196, 'eval_runtime': 2.8181, 'eval_samples_per_second': 397.431, 'eval_steps_per_second': 12.42, 'epoch': 1.0}
 67%|████████████████████████████████████████████████████████████▋                              | 216/324 [00:47<00:19,  5.44it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.5728, 'grad_norm': 3.9368340969085693, 'learning_rate': 3.30246913580247e-05, 'epoch': 1.02}
{'loss': 0.4596, 'grad_norm': 5.064782619476318, 'learning_rate': 3.148148148148148e-05, 'epoch': 1.11}
{'loss': 0.3723, 'grad_norm': 5.353817939758301, 'learning_rate': 2.993827160493827e-05, 'epoch': 1.2}
{'loss': 0.3781, 'grad_norm': 8.625823020935059, 'learning_rate': 2.839506172839506e-05, 'epoch': 1.3}
{'loss': 0.411, 'grad_norm': 7.123117923736572, 'learning_rate': 2.6851851851851855e-05, 'epoch': 1.39}
{'loss': 0.4944, 'grad_norm': 9.133989334106445, 'learning_rate': 2.5308641975308646e-05, 'epoch': 1.48}
{'loss': 0.4264, 'grad_norm': 8.723407745361328, 'learning_rate': 2.3765432098765433e-05, 'epoch': 1.57}
{'loss': 0.3813, 'grad_norm': 8.920740127563477, 'learning_rate': 2.2222222222222223e-05, 'epoch': 1.67}
{'loss': 0.4173, 'grad_norm': 6.619681358337402, 'learning_rate': 2.0679012345679014e-05, 'epoch': 1.76}
{'loss': 0.4131, 'grad_norm': 3.5473690032958984, 'learning_rate': 1.91358024691358e-05, 'epoch': 1.85}
{'loss': 0.3637, 'grad_norm': 7.477940559387207, 'learning_rate': 1.7592592592592595e-05, 'epoch': 1.94}
  warnings.warn(                                                                                                                  
{'eval_loss': 0.49935826659202576, 'eval_accuracy': 0.8375, 'eval_micro_f1': 0.8375, 'eval_macro_f1': 0.7522232337182285, 'eval_runtime': 2.8114, 'eval_samples_per_second': 398.377, 'eval_steps_per_second': 12.449, 'epoch': 2.0}
100%|███████████████████████████████████████████████████████████████████████████████████████████| 324/324 [01:08<00:00,  5.53it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.328, 'grad_norm': 3.121671438217163, 'learning_rate': 1.604938271604938e-05, 'epoch': 2.04}
{'loss': 0.2045, 'grad_norm': 4.854783058166504, 'learning_rate': 1.4506172839506174e-05, 'epoch': 2.13}
{'loss': 0.1874, 'grad_norm': 9.605732917785645, 'learning_rate': 1.2962962962962962e-05, 'epoch': 2.22}
{'loss': 0.2923, 'grad_norm': 7.319151878356934, 'learning_rate': 1.1419753086419753e-05, 'epoch': 2.31}
{'loss': 0.2353, 'grad_norm': 10.851238250732422, 'learning_rate': 9.876543209876543e-06, 'epoch': 2.41}
{'loss': 0.2281, 'grad_norm': 10.704503059387207, 'learning_rate': 8.333333333333334e-06, 'epoch': 2.5}
{'loss': 0.1776, 'grad_norm': 4.361227989196777, 'learning_rate': 6.790123456790123e-06, 'epoch': 2.59}
{'loss': 0.1931, 'grad_norm': 8.051539421081543, 'learning_rate': 5.246913580246914e-06, 'epoch': 2.69}
{'loss': 0.1825, 'grad_norm': 5.198303699493408, 'learning_rate': 3.7037037037037037e-06, 'epoch': 2.78}
{'loss': 0.2511, 'grad_norm': 9.805767059326172, 'learning_rate': 2.1604938271604937e-06, 'epoch': 2.87}
{'loss': 0.3423, 'grad_norm': 10.72945499420166, 'learning_rate': 6.17283950617284e-07, 'epoch': 2.96}
  warnings.warn(
100%|███████████████████████████████████████████████████████████████████████████████████████████| 324/324 [01:12<00:00,  4.44it/s]
2024-10-29 11:00:51 - INFO - __main__ - Starting evaluation...                                                                    
{'eval_loss': 0.5562402009963989, 'eval_accuracy': 0.8339285714285715, 'eval_micro_f1': 0.8339285714285715, 'eval_macro_f1': 0.7522650448419247, 'eval_runtime': 2.6783, 'eval_samples_per_second': 418.181, 'eval_steps_per_second': 13.068, 'epoch': 3.0}
{'train_runtime': 72.9238, 'train_samples_per_second': 142.011, 'train_steps_per_second': 4.443, 'train_loss': 0.4435697988963421, 'epoch': 3.0}
/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn(
100%|█████████████████████████████████████████████████████████████████████████████████████████████| 35/35 [00:02<00:00, 13.48it/s]
2024-10-29 11:00:54 - INFO - __main__ - Evaluation results: {'eval_loss': 0.5562402009963989, 'eval_accuracy': 0.8339285714285715, 'eval_micro_f1': 0.8339285714285715, 'eval_macro_f1': 0.7522650448419247, 'eval_runtime': 2.6821, 'eval_samples_per_second': 417.587, 'eval_steps_per_second': 13.05, 'epoch': 3.0}
2024-10-29 11:00:54 - INFO - __main__ - Training complete.
