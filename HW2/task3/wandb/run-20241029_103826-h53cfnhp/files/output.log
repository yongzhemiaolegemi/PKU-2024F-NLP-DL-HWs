2024-10-29 10:38:27 - INFO - __main__ - Initializing training script
2024-10-29 10:38:27 - INFO - __main__ - Loading dataset...
2024-10-29 10:38:27 - INFO - __main__ - Loading model and tokenizer...
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Map: 100%|██████████████████████████████████████████████████████████████████████████| 3452/3452 [00:00<00:00, 16423.36 examples/s]
Map: 100%|██████████████████████████████████████████████████████████████████████████| 1120/1120 [00:00<00:00, 15274.43 examples/s]
/root/HW2/task2/train.py:101: FutureWarning: `tokenizer` is deprecated and will be removed in version 5.0.0 for `Trainer.__init__`. Use `processing_class` instead.
  trainer = Trainer(
2024-10-29 10:38:33 - INFO - __main__ - Starting training...
  0%|                                                                                                     | 0/324 [00:00<?, ?it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn(
 33%|██████████████████████████████▎                                                            | 108/324 [00:23<00:38,  5.58it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.8832, 'grad_norm': 8.108139991760254, 'learning_rate': 4.845679012345679e-05, 'epoch': 0.09}
{'loss': 0.8091, 'grad_norm': 8.719268798828125, 'learning_rate': 4.691358024691358e-05, 'epoch': 0.19}
{'loss': 0.68, 'grad_norm': 8.718467712402344, 'learning_rate': 4.5370370370370374e-05, 'epoch': 0.28}
{'loss': 0.6274, 'grad_norm': 8.295496940612793, 'learning_rate': 4.3827160493827164e-05, 'epoch': 0.37}
{'loss': 0.7718, 'grad_norm': 5.116593360900879, 'learning_rate': 4.2283950617283955e-05, 'epoch': 0.46}
{'loss': 0.6524, 'grad_norm': 5.648102283477783, 'learning_rate': 4.074074074074074e-05, 'epoch': 0.56}
{'loss': 0.5867, 'grad_norm': 5.800224304199219, 'learning_rate': 3.9197530864197535e-05, 'epoch': 0.65}
{'loss': 0.5985, 'grad_norm': 4.838713645935059, 'learning_rate': 3.7654320987654326e-05, 'epoch': 0.74}
{'loss': 0.6078, 'grad_norm': 6.576304912567139, 'learning_rate': 3.611111111111111e-05, 'epoch': 0.83}
{'loss': 0.6212, 'grad_norm': 4.810657978057861, 'learning_rate': 3.45679012345679e-05, 'epoch': 0.93}
  warnings.warn(                                                                                                                  
{'eval_loss': 0.5122525095939636, 'eval_accuracy': 0.7928571428571428, 'eval_micro_f1': 0.7928571428571428, 'eval_macro_f1': 0.6290533400976704, 'eval_runtime': 2.7662, 'eval_samples_per_second': 404.885, 'eval_steps_per_second': 12.653, 'epoch': 1.0}
 67%|████████████████████████████████████████████████████████████▋                              | 216/324 [00:46<00:19,  5.58it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.5448, 'grad_norm': 3.0616202354431152, 'learning_rate': 3.30246913580247e-05, 'epoch': 1.02}
{'loss': 0.4132, 'grad_norm': 4.539114475250244, 'learning_rate': 3.148148148148148e-05, 'epoch': 1.11}
{'loss': 0.4156, 'grad_norm': 4.306173801422119, 'learning_rate': 2.993827160493827e-05, 'epoch': 1.2}
{'loss': 0.39, 'grad_norm': 3.542410135269165, 'learning_rate': 2.839506172839506e-05, 'epoch': 1.3}
{'loss': 0.4181, 'grad_norm': 7.579415798187256, 'learning_rate': 2.6851851851851855e-05, 'epoch': 1.39}
{'loss': 0.4221, 'grad_norm': 6.676605701446533, 'learning_rate': 2.5308641975308646e-05, 'epoch': 1.48}
{'loss': 0.4548, 'grad_norm': 8.386576652526855, 'learning_rate': 2.3765432098765433e-05, 'epoch': 1.57}
{'loss': 0.4354, 'grad_norm': 5.677560806274414, 'learning_rate': 2.2222222222222223e-05, 'epoch': 1.67}
{'loss': 0.399, 'grad_norm': 11.67238998413086, 'learning_rate': 2.0679012345679014e-05, 'epoch': 1.76}
{'loss': 0.3781, 'grad_norm': 6.194349765777588, 'learning_rate': 1.91358024691358e-05, 'epoch': 1.85}
{'loss': 0.4079, 'grad_norm': 4.538058757781982, 'learning_rate': 1.7592592592592595e-05, 'epoch': 1.94}
  warnings.warn(                                                                                                                  
{'eval_loss': 0.5005814433097839, 'eval_accuracy': 0.8089285714285714, 'eval_micro_f1': 0.8089285714285714, 'eval_macro_f1': 0.6759804400566601, 'eval_runtime': 2.7662, 'eval_samples_per_second': 404.885, 'eval_steps_per_second': 12.653, 'epoch': 2.0}
100%|███████████████████████████████████████████████████████████████████████████████████████████| 324/324 [01:06<00:00,  5.57it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.4106, 'grad_norm': 2.16863751411438, 'learning_rate': 1.604938271604938e-05, 'epoch': 2.04}
{'loss': 0.2968, 'grad_norm': 8.804205894470215, 'learning_rate': 1.4506172839506174e-05, 'epoch': 2.13}
{'loss': 0.2875, 'grad_norm': 4.852655410766602, 'learning_rate': 1.2962962962962962e-05, 'epoch': 2.22}
{'loss': 0.2434, 'grad_norm': 8.609590530395508, 'learning_rate': 1.1419753086419753e-05, 'epoch': 2.31}
{'loss': 0.2608, 'grad_norm': 9.21359920501709, 'learning_rate': 9.876543209876543e-06, 'epoch': 2.41}
{'loss': 0.2009, 'grad_norm': 5.954137802124023, 'learning_rate': 8.333333333333334e-06, 'epoch': 2.5}
{'loss': 0.2211, 'grad_norm': 8.779593467712402, 'learning_rate': 6.790123456790123e-06, 'epoch': 2.59}
{'loss': 0.2632, 'grad_norm': 7.599545478820801, 'learning_rate': 5.246913580246914e-06, 'epoch': 2.69}
{'loss': 0.2857, 'grad_norm': 5.189413547515869, 'learning_rate': 3.7037037037037037e-06, 'epoch': 2.78}
{'loss': 0.2497, 'grad_norm': 9.754132270812988, 'learning_rate': 2.1604938271604937e-06, 'epoch': 2.87}
{'loss': 0.2673, 'grad_norm': 8.06070327758789, 'learning_rate': 6.17283950617284e-07, 'epoch': 2.96}
  warnings.warn(
100%|███████████████████████████████████████████████████████████████████████████████████████████| 324/324 [01:11<00:00,  4.54it/s]
2024-10-29 10:39:45 - INFO - __main__ - Starting evaluation...                                                                    
{'eval_loss': 0.4331778585910797, 'eval_accuracy': 0.84375, 'eval_micro_f1': 0.84375, 'eval_macro_f1': 0.7576431278637656, 'eval_runtime': 2.6585, 'eval_samples_per_second': 421.289, 'eval_steps_per_second': 13.165, 'epoch': 3.0}
{'train_runtime': 71.4543, 'train_samples_per_second': 144.932, 'train_steps_per_second': 4.534, 'train_loss': 0.45120528156374706, 'epoch': 3.0}
/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn(
100%|█████████████████████████████████████████████████████████████████████████████████████████████| 35/35 [00:02<00:00, 13.15it/s]
2024-10-29 10:39:48 - INFO - __main__ - Evaluation results: {'eval_loss': 0.4331778585910797, 'eval_accuracy': 0.84375, 'eval_micro_f1': 0.84375, 'eval_macro_f1': 0.7576431278637656, 'eval_runtime': 2.7524, 'eval_samples_per_second': 406.919, 'eval_steps_per_second': 12.716, 'epoch': 3.0}
2024-10-29 10:39:48 - INFO - __main__ - Training complete.
