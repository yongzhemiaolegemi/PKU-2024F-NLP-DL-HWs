2024-10-29 10:36:58 - INFO - __main__ - Initializing training script
2024-10-29 10:36:58 - INFO - __main__ - Loading dataset...
2024-10-29 10:36:58 - INFO - __main__ - Loading model and tokenizer...
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Map: 100%|██████████████████████████████████████████████████████████████████████████| 3452/3452 [00:00<00:00, 12345.02 examples/s]
Map: 100%|██████████████████████████████████████████████████████████████████████████| 1120/1120 [00:00<00:00, 14511.73 examples/s]
/root/HW2/task2/train.py:101: FutureWarning: `tokenizer` is deprecated and will be removed in version 5.0.0 for `Trainer.__init__`. Use `processing_class` instead.
  trainer = Trainer(
2024-10-29 10:37:04 - INFO - __main__ - Starting training...
  0%|                                                                                                     | 0/324 [00:00<?, ?it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn(
 33%|██████████████████████████████▎                                                            | 108/324 [00:23<00:37,  5.81it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.8995, 'grad_norm': 2.9834916591644287, 'learning_rate': 4.845679012345679e-05, 'epoch': 0.09}
{'loss': 0.8409, 'grad_norm': 6.330082893371582, 'learning_rate': 4.691358024691358e-05, 'epoch': 0.19}
{'loss': 0.6622, 'grad_norm': 3.1479649543762207, 'learning_rate': 4.5370370370370374e-05, 'epoch': 0.28}
{'loss': 0.6665, 'grad_norm': 4.802400588989258, 'learning_rate': 4.3827160493827164e-05, 'epoch': 0.37}
{'loss': 0.7145, 'grad_norm': 6.446586608886719, 'learning_rate': 4.2283950617283955e-05, 'epoch': 0.46}
{'loss': 0.6321, 'grad_norm': 5.773877143859863, 'learning_rate': 4.074074074074074e-05, 'epoch': 0.56}
{'loss': 0.664, 'grad_norm': 4.142430782318115, 'learning_rate': 3.9197530864197535e-05, 'epoch': 0.65}
{'loss': 0.5632, 'grad_norm': 4.251665115356445, 'learning_rate': 3.7654320987654326e-05, 'epoch': 0.74}
{'loss': 0.6256, 'grad_norm': 4.6848273277282715, 'learning_rate': 3.611111111111111e-05, 'epoch': 0.83}
{'loss': 0.5467, 'grad_norm': 4.814685821533203, 'learning_rate': 3.45679012345679e-05, 'epoch': 0.93}
  warnings.warn(                                                                                                                  
{'eval_loss': 0.4969160854816437, 'eval_accuracy': 0.8, 'eval_micro_f1': 0.8, 'eval_macro_f1': 0.6412513147898687, 'eval_runtime': 2.6674, 'eval_samples_per_second': 419.878, 'eval_steps_per_second': 13.121, 'epoch': 1.0}
 67%|████████████████████████████████████████████████████████████▋                              | 216/324 [00:46<00:19,  5.59it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.5528, 'grad_norm': 4.443661212921143, 'learning_rate': 3.30246913580247e-05, 'epoch': 1.02}
{'loss': 0.3802, 'grad_norm': 25.367355346679688, 'learning_rate': 3.148148148148148e-05, 'epoch': 1.11}
{'loss': 0.4527, 'grad_norm': 5.796273708343506, 'learning_rate': 2.993827160493827e-05, 'epoch': 1.2}
{'loss': 0.36, 'grad_norm': 5.415738105773926, 'learning_rate': 2.839506172839506e-05, 'epoch': 1.3}
{'loss': 0.4833, 'grad_norm': 3.761700391769409, 'learning_rate': 2.6851851851851855e-05, 'epoch': 1.39}
{'loss': 0.3924, 'grad_norm': 3.8740408420562744, 'learning_rate': 2.5308641975308646e-05, 'epoch': 1.48}
{'loss': 0.4078, 'grad_norm': 9.534639358520508, 'learning_rate': 2.3765432098765433e-05, 'epoch': 1.57}
{'loss': 0.323, 'grad_norm': 11.408831596374512, 'learning_rate': 2.2222222222222223e-05, 'epoch': 1.67}
{'loss': 0.4147, 'grad_norm': 8.471551895141602, 'learning_rate': 2.0679012345679014e-05, 'epoch': 1.76}
{'loss': 0.3855, 'grad_norm': 4.678720474243164, 'learning_rate': 1.91358024691358e-05, 'epoch': 1.85}
{'loss': 0.3565, 'grad_norm': 5.488985538482666, 'learning_rate': 1.7592592592592595e-05, 'epoch': 1.94}
  warnings.warn(                                                                                                                  
{'eval_loss': 0.43738627433776855, 'eval_accuracy': 0.8383928571428572, 'eval_micro_f1': 0.8383928571428572, 'eval_macro_f1': 0.7628079316144502, 'eval_runtime': 2.7515, 'eval_samples_per_second': 407.053, 'eval_steps_per_second': 12.72, 'epoch': 2.0}
100%|███████████████████████████████████████████████████████████████████████████████████████████| 324/324 [01:05<00:00,  5.75it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.2433, 'grad_norm': 3.783346652984619, 'learning_rate': 1.604938271604938e-05, 'epoch': 2.04}
{'loss': 0.2541, 'grad_norm': 5.7884626388549805, 'learning_rate': 1.4506172839506174e-05, 'epoch': 2.13}
{'loss': 0.2341, 'grad_norm': 11.178767204284668, 'learning_rate': 1.2962962962962962e-05, 'epoch': 2.22}
{'loss': 0.2255, 'grad_norm': 2.2877273559570312, 'learning_rate': 1.1419753086419753e-05, 'epoch': 2.31}
{'loss': 0.2539, 'grad_norm': 7.058195114135742, 'learning_rate': 9.876543209876543e-06, 'epoch': 2.41}
{'loss': 0.225, 'grad_norm': 5.8602705001831055, 'learning_rate': 8.333333333333334e-06, 'epoch': 2.5}
{'loss': 0.275, 'grad_norm': 5.219506740570068, 'learning_rate': 6.790123456790123e-06, 'epoch': 2.59}
{'loss': 0.2087, 'grad_norm': 6.240533351898193, 'learning_rate': 5.246913580246914e-06, 'epoch': 2.69}
{'loss': 0.2585, 'grad_norm': 8.058732986450195, 'learning_rate': 3.7037037037037037e-06, 'epoch': 2.78}
{'loss': 0.2419, 'grad_norm': 8.755345344543457, 'learning_rate': 2.1604938271604937e-06, 'epoch': 2.87}
{'loss': 0.2124, 'grad_norm': 3.9260177612304688, 'learning_rate': 6.17283950617284e-07, 'epoch': 2.96}
  warnings.warn(
100%|███████████████████████████████████████████████████████████████████████████████████████████| 324/324 [01:10<00:00,  4.62it/s]
2024-10-29 10:38:14 - INFO - __main__ - Starting evaluation...                                                                    
{'eval_loss': 0.46150410175323486, 'eval_accuracy': 0.8401785714285714, 'eval_micro_f1': 0.8401785714285714, 'eval_macro_f1': 0.7561126312474892, 'eval_runtime': 2.5722, 'eval_samples_per_second': 435.419, 'eval_steps_per_second': 13.607, 'epoch': 3.0}
{'train_runtime': 70.1389, 'train_samples_per_second': 147.65, 'train_steps_per_second': 4.619, 'train_loss': 0.43343573385550654, 'epoch': 3.0}
/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn(
100%|█████████████████████████████████████████████████████████████████████████████████████████████| 35/35 [00:02<00:00, 14.10it/s]
2024-10-29 10:38:17 - INFO - __main__ - Evaluation results: {'eval_loss': 0.46150410175323486, 'eval_accuracy': 0.8401785714285714, 'eval_micro_f1': 0.8401785714285714, 'eval_macro_f1': 0.7561126312474892, 'eval_runtime': 2.5627, 'eval_samples_per_second': 437.031, 'eval_steps_per_second': 13.657, 'epoch': 3.0}
2024-10-29 10:38:17 - INFO - __main__ - Training complete.
