2024-10-29 10:50:16 - INFO - __main__ - Initializing training script
2024-10-29 10:50:16 - INFO - __main__ - Loading dataset...
2024-10-29 10:50:17 - INFO - __main__ - Loading model and tokenizer...
Some weights of CustomRobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['adapter.bias', 'adapter.weight', 'classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Map: 100%|██████████████████████████████████████████████████████████████████████████| 3452/3452 [00:00<00:00, 18162.95 examples/s]
Map: 100%|██████████████████████████████████████████████████████████████████████████| 1120/1120 [00:00<00:00, 16110.53 examples/s]
/root/HW2/task3/train.py:103: FutureWarning: `tokenizer` is deprecated and will be removed in version 5.0.0 for `Trainer.__init__`. Use `processing_class` instead.
  trainer = Trainer(
2024-10-29 10:50:22 - INFO - __main__ - Starting training...
  0%|                                                                                                     | 0/324 [00:00<?, ?it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn(
 33%|██████████████████████████████▎                                                            | 108/324 [00:36<01:00,  3.60it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.991, 'grad_norm': 0.7943428754806519, 'learning_rate': 4.845679012345679e-05, 'epoch': 0.09}
{'loss': 0.9217, 'grad_norm': 0.960600733757019, 'learning_rate': 4.691358024691358e-05, 'epoch': 0.19}
{'loss': 0.9747, 'grad_norm': 0.7221788763999939, 'learning_rate': 4.5370370370370374e-05, 'epoch': 0.28}
{'loss': 0.9311, 'grad_norm': 0.9092130064964294, 'learning_rate': 4.3827160493827164e-05, 'epoch': 0.37}
{'loss': 0.9489, 'grad_norm': 0.8179011940956116, 'learning_rate': 4.2283950617283955e-05, 'epoch': 0.46}
{'loss': 0.9393, 'grad_norm': 0.8175331354141235, 'learning_rate': 4.074074074074074e-05, 'epoch': 0.56}
{'loss': 0.9825, 'grad_norm': 1.153294563293457, 'learning_rate': 3.9197530864197535e-05, 'epoch': 0.65}
{'loss': 0.9028, 'grad_norm': 1.0306423902511597, 'learning_rate': 3.7654320987654326e-05, 'epoch': 0.74}
{'loss': 1.0151, 'grad_norm': 2.675779104232788, 'learning_rate': 3.611111111111111e-05, 'epoch': 0.83}
{'loss': 0.9607, 'grad_norm': 1.4377697706222534, 'learning_rate': 3.45679012345679e-05, 'epoch': 0.93}
  warnings.warn(                                                                                                                  
{'eval_loss': 0.8930164575576782, 'eval_accuracy': 0.65, 'eval_micro_f1': 0.65, 'eval_macro_f1': 0.2626262626262626, 'eval_runtime': 5.4008, 'eval_samples_per_second': 207.376, 'eval_steps_per_second': 6.481, 'epoch': 1.0}
 44%|███████████████████████████████████████▉                                                   | 142/324 [00:45<00:53,  3.40it/s]Traceback (most recent call last):
{'loss': 0.9289, 'grad_norm': 0.9710578918457031, 'learning_rate': 3.30246913580247e-05, 'epoch': 1.02}
{'loss': 0.9018, 'grad_norm': 0.46757543087005615, 'learning_rate': 3.148148148148148e-05, 'epoch': 1.11}
{'loss': 0.9819, 'grad_norm': 0.5909914374351501, 'learning_rate': 2.993827160493827e-05, 'epoch': 1.2}
{'loss': 0.9441, 'grad_norm': 0.7984504699707031, 'learning_rate': 2.839506172839506e-05, 'epoch': 1.3}
  File "/root/HW2/task3/train.py", line 117, in <module>
    trainer.train()
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/transformers/trainer.py", line 2122, in train
    return inner_training_loop(
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/transformers/trainer.py", line 2474, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs, num_items_in_batch)
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/transformers/trainer.py", line 3572, in training_step
    loss = self.compute_loss(model, inputs, num_items_in_batch=num_items_in_batch)
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/transformers/trainer.py", line 3625, in compute_loss
    outputs = model(**inputs)
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/data_parallel.py", line 193, in forward
    outputs = self.parallel_apply(replicas, inputs, module_kwargs)
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/data_parallel.py", line 212, in parallel_apply
    return parallel_apply(
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/parallel_apply.py", line 118, in parallel_apply
    thread.join()
  File "/root/miniconda3/envs/pytorch/lib/python3.10/threading.py", line 1089, in join
    self._wait_for_tstate_lock()
  File "/root/miniconda3/envs/pytorch/lib/python3.10/threading.py", line 1105, in _wait_for_tstate_lock
    elif lock.acquire(block, timeout):
KeyboardInterrupt
