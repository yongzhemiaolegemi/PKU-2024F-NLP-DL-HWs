2024-10-29 11:19:53 - INFO - __main__ - Initializing training script
2024-10-29 11:19:53 - INFO - __main__ - Loading dataset...
2024-10-29 11:19:53 - INFO - __main__ - Loading model and tokenizer...
Some weights of RobertaForSequenceClassificationWithAdapters were not initialized from the model checkpoint at roberta-base and are newly initialized: ['classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight', 'roberta.encoder.layer.0.output.adapter_after_ffn.down_project.bias', 'roberta.encoder.layer.0.output.adapter_after_ffn.down_project.weight', 'roberta.encoder.layer.0.output.adapter_after_ffn.up_project.bias', 'roberta.encoder.layer.0.output.adapter_after_ffn.up_project.weight', 'roberta.encoder.layer.0.output.adapter_before_ffn.down_project.bias', 'roberta.encoder.layer.0.output.adapter_before_ffn.down_project.weight', 'roberta.encoder.layer.0.output.adapter_before_ffn.up_project.bias', 'roberta.encoder.layer.0.output.adapter_before_ffn.up_project.weight', 'roberta.encoder.layer.1.output.adapter_after_ffn.down_project.bias', 'roberta.encoder.layer.1.output.adapter_after_ffn.down_project.weight', 'roberta.encoder.layer.1.output.adapter_after_ffn.up_project.bias', 'roberta.encoder.layer.1.output.adapter_after_ffn.up_project.weight', 'roberta.encoder.layer.1.output.adapter_before_ffn.down_project.bias', 'roberta.encoder.layer.1.output.adapter_before_ffn.down_project.weight', 'roberta.encoder.layer.1.output.adapter_before_ffn.up_project.bias', 'roberta.encoder.layer.1.output.adapter_before_ffn.up_project.weight', 'roberta.encoder.layer.10.output.adapter_after_ffn.down_project.bias', 'roberta.encoder.layer.10.output.adapter_after_ffn.down_project.weight', 'roberta.encoder.layer.10.output.adapter_after_ffn.up_project.bias', 'roberta.encoder.layer.10.output.adapter_after_ffn.up_project.weight', 'roberta.encoder.layer.10.output.adapter_before_ffn.down_project.bias', 'roberta.encoder.layer.10.output.adapter_before_ffn.down_project.weight', 'roberta.encoder.layer.10.output.adapter_before_ffn.up_project.bias', 'roberta.encoder.layer.10.output.adapter_before_ffn.up_project.weight', 'roberta.encoder.layer.11.output.adapter_after_ffn.down_project.bias', 'roberta.encoder.layer.11.output.adapter_after_ffn.down_project.weight', 'roberta.encoder.layer.11.output.adapter_after_ffn.up_project.bias', 'roberta.encoder.layer.11.output.adapter_after_ffn.up_project.weight', 'roberta.encoder.layer.11.output.adapter_before_ffn.down_project.bias', 'roberta.encoder.layer.11.output.adapter_before_ffn.down_project.weight', 'roberta.encoder.layer.11.output.adapter_before_ffn.up_project.bias', 'roberta.encoder.layer.11.output.adapter_before_ffn.up_project.weight', 'roberta.encoder.layer.2.output.adapter_after_ffn.down_project.bias', 'roberta.encoder.layer.2.output.adapter_after_ffn.down_project.weight', 'roberta.encoder.layer.2.output.adapter_after_ffn.up_project.bias', 'roberta.encoder.layer.2.output.adapter_after_ffn.up_project.weight', 'roberta.encoder.layer.2.output.adapter_before_ffn.down_project.bias', 'roberta.encoder.layer.2.output.adapter_before_ffn.down_project.weight', 'roberta.encoder.layer.2.output.adapter_before_ffn.up_project.bias', 'roberta.encoder.layer.2.output.adapter_before_ffn.up_project.weight', 'roberta.encoder.layer.3.output.adapter_after_ffn.down_project.bias', 'roberta.encoder.layer.3.output.adapter_after_ffn.down_project.weight', 'roberta.encoder.layer.3.output.adapter_after_ffn.up_project.bias', 'roberta.encoder.layer.3.output.adapter_after_ffn.up_project.weight', 'roberta.encoder.layer.3.output.adapter_before_ffn.down_project.bias', 'roberta.encoder.layer.3.output.adapter_before_ffn.down_project.weight', 'roberta.encoder.layer.3.output.adapter_before_ffn.up_project.bias', 'roberta.encoder.layer.3.output.adapter_before_ffn.up_project.weight', 'roberta.encoder.layer.4.output.adapter_after_ffn.down_project.bias', 'roberta.encoder.layer.4.output.adapter_after_ffn.down_project.weight', 'roberta.encoder.layer.4.output.adapter_after_ffn.up_project.bias', 'roberta.encoder.layer.4.output.adapter_after_ffn.up_project.weight', 'roberta.encoder.layer.4.output.adapter_before_ffn.down_project.bias', 'roberta.encoder.layer.4.output.adapter_before_ffn.down_project.weight', 'roberta.e
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Map: 100%|██████████████████████████████████████████████████████████████████████████| 3452/3452 [00:00<00:00, 14573.77 examples/s]
Map: 100%|██████████████████████████████████████████████████████████████████████████| 1120/1120 [00:00<00:00, 13009.16 examples/s]
/root/HW2/task3/train.py:103: FutureWarning: `tokenizer` is deprecated and will be removed in version 5.0.0 for `Trainer.__init__`. Use `processing_class` instead.
  trainer = Trainer(
2024-10-29 11:19:59 - INFO - __main__ - Starting training...
  0%|                                                                                                     | 0/324 [00:00<?, ?it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn(
 33%|██████████████████████████████▎                                                            | 108/324 [00:38<00:57,  3.79it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 1.0661, 'grad_norm': 2.085233211517334, 'learning_rate': 4.845679012345679e-05, 'epoch': 0.09}
{'loss': 1.0213, 'grad_norm': 1.841863989830017, 'learning_rate': 4.691358024691358e-05, 'epoch': 0.19}
{'loss': 0.9564, 'grad_norm': 1.6101922988891602, 'learning_rate': 4.5370370370370374e-05, 'epoch': 0.28}
{'loss': 0.9781, 'grad_norm': 0.839806854724884, 'learning_rate': 4.3827160493827164e-05, 'epoch': 0.37}
{'loss': 0.9286, 'grad_norm': 1.2091542482376099, 'learning_rate': 4.2283950617283955e-05, 'epoch': 0.46}
{'loss': 0.9805, 'grad_norm': 2.2203140258789062, 'learning_rate': 4.074074074074074e-05, 'epoch': 0.56}
{'loss': 0.9587, 'grad_norm': 0.9950922727584839, 'learning_rate': 3.9197530864197535e-05, 'epoch': 0.65}
{'loss': 0.9726, 'grad_norm': 1.5461536645889282, 'learning_rate': 3.7654320987654326e-05, 'epoch': 0.74}
{'loss': 0.9105, 'grad_norm': 1.5711997747421265, 'learning_rate': 3.611111111111111e-05, 'epoch': 0.83}
{'loss': 0.9233, 'grad_norm': 1.3302178382873535, 'learning_rate': 3.45679012345679e-05, 'epoch': 0.93}
  warnings.warn(                                                                                                                  
{'eval_loss': 0.8937920928001404, 'eval_accuracy': 0.65, 'eval_micro_f1': 0.65, 'eval_macro_f1': 0.2626262626262626, 'eval_runtime': 6.0724, 'eval_samples_per_second': 184.44, 'eval_steps_per_second': 5.764, 'epoch': 1.0}
 67%|████████████████████████████████████████████████████████████▋                              | 216/324 [01:14<00:29,  3.66it/s]/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:71: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
{'loss': 0.9202, 'grad_norm': 1.0932960510253906, 'learning_rate': 3.30246913580247e-05, 'epoch': 1.02}
{'loss': 0.9263, 'grad_norm': 2.3925344944000244, 'learning_rate': 3.148148148148148e-05, 'epoch': 1.11}
{'loss': 0.9699, 'grad_norm': 1.0512449741363525, 'learning_rate': 2.993827160493827e-05, 'epoch': 1.2}
{'loss': 0.9322, 'grad_norm': 0.7487110495567322, 'learning_rate': 2.839506172839506e-05, 'epoch': 1.3}
{'loss': 0.9387, 'grad_norm': 0.6254351735115051, 'learning_rate': 2.6851851851851855e-05, 'epoch': 1.39}
{'loss': 0.9562, 'grad_norm': 0.8700963854789734, 'learning_rate': 2.5308641975308646e-05, 'epoch': 1.48}
{'loss': 0.9655, 'grad_norm': 1.130036473274231, 'learning_rate': 2.3765432098765433e-05, 'epoch': 1.57}
{'loss': 0.9392, 'grad_norm': 1.005504846572876, 'learning_rate': 2.2222222222222223e-05, 'epoch': 1.67}
{'loss': 0.8914, 'grad_norm': 0.9752163887023926, 'learning_rate': 2.0679012345679014e-05, 'epoch': 1.76}
{'loss': 0.958, 'grad_norm': 0.9341834187507629, 'learning_rate': 1.91358024691358e-05, 'epoch': 1.85}
{'loss': 0.9026, 'grad_norm': 2.2053823471069336, 'learning_rate': 1.7592592592592595e-05, 'epoch': 1.94}
  warnings.warn(                                                                                                                  
{'eval_loss': 0.888198733329773, 'eval_accuracy': 0.65, 'eval_micro_f1': 0.65, 'eval_macro_f1': 0.2626262626262626, 'eval_runtime': 6.3245, 'eval_samples_per_second': 177.09, 'eval_steps_per_second': 5.534, 'epoch': 2.0}
 70%|███████████████████████████████████████████████████████████████▊                           | 227/324 [01:17<00:33,  2.91it/s]Traceback (most recent call last):
{'loss': 0.9694, 'grad_norm': 2.467550277709961, 'learning_rate': 1.604938271604938e-05, 'epoch': 2.04}
  File "/root/HW2/task3/train.py", line 117, in <module>
    # 开始训练和评估
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/transformers/trainer.py", line 2122, in train
    return inner_training_loop(
  File "/root/miniconda3/envs/pytorch/lib/python3.10/site-packages/transformers/trainer.py", line 2479, in _inner_training_loop
    and (torch.isnan(tr_loss_step) or torch.isinf(tr_loss_step))
KeyboardInterrupt
